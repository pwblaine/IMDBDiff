{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid2\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid601\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid602\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid701\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid801\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid902\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}}
\margl1440\margr1440\vieww14180\viewh9520\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs26 \cf0 \{\
1. Client submits two movie titles\
\
2. Query our database\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 		a. For either if not in database, query IMDB\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls1\ilvl1\cf0 	i. For either if not in IMDB, error\
	ii. For either in IMDB, fetch it\'a0\
	iii. If multiple, obtain more information from the user\
\
3. If multiple, obtain more information from the user\
\
4. Convert any OmdbObjects to MovieObjects, cache them, and store them to throw-away variables\
\
5. Create a ClientObject and compare 2 movie objects and find similarities using throw-away variables\
	a. For each matched trait, update the ClientObject with that information\
\
7. Send ClientObject to the client\
\
8. Client updates its display with the values from the ClientObject\
\
9. Client displays similarities\
\}\
\
\
\
\
\
\pard\pardeftab720\sa260
\cf0 \ul \ulc0 DATA STRUCTURES\ulnone \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0
\b \cf0 {\listtext	\'95	}OmdbObject 
\b0 is an object returned by OMDB API\
\ls2\ilvl0
\b {\listtext	\'95	}MovieObject 
\b0 is a\'a0movie object in our parse database\
\ls2\ilvl0
\b {\listtext	\'95	}ClientObject 
\b0 is the object sent back to the user containing\'a0string values depicting the commonalities between two MovieObjects\
\pard\pardeftab720
\cf0 \
\
\
\
\pard\pardeftab720
\cf0 \ul FUNCTIONS\ulnone \
\
\
QueryOmdbByTitle(queryString) \{\
	//Query OMDB for movie by title\
\}\
\
QueryMovieByTitle(queryString) \{\
	//Query our parse database for movie by title\
\}\
\
CreateMovieObject(OmdbObject) \{\
	//first calls ValidateOmdbObject\
	//turn the omdb object into a MovieObject for our database\
	//return MovieObject\
\}\
\
CacheMovieToDatabase(MovieObject) \{\
	//add MovieObject to parse db\
\'a0\}\
\
CreateClientObject(MovieObject1, MovieObject2) \{\
	//take the parse movie objects and looks for shared characteristics\
	//return a ClientObject containing those characteristics\
	
\b //maybe this is\'a0done in the iOS code?
\b0 \
\}\
\
ValidateMovieObject(MovieObject) \{\
	//double check that MovieObject "has" all necessary keys\
	//return an array of the missing keys\
\}\
\
ValidateOmdbObject(OmdbObject) \{\
	//double check that OmdbObject "has" all necessary keys\
	//return an array of the missing keys\
\}\
\
\
\
\
\pard\pardeftab720\sa260
\cf0 \ul THE PATH\ulnone \
-\'a0Client submits two movie titles\
-\'a0Query our database for titles\
	-for either if not in database, query IMDB\
		-For either if not in IMDB, error\
		-For either if in IMDB, fetch it\
		-If multiple by a title, obtain more information from the user\
-\'a0If multiple by a title in OUR database, obtain more information from the user\
-Convert any OmdbObjects to MovieObjects, cache them, and store them in throw-away variables for processing\
-Create a ClientObject and compare the 2 movie objects and find similarities using throw-away variables\
	-for each matched trait, update the ClientObject with that information\
-Send ClientObject to the client\
-Client updates its display with the values from the ClientObject\
\
\
\pard\pardeftab720\sa260

\b \cf0 Client submits two movie titles
\b0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0
\f1\fs24 \cf0 {\listtext	1.	}Movie titles submitted as strings, strings need to be parsed appropriately for the query\
{\listtext	2.	}Pass parsed string to QueryMovieByTitle()\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Query our database for titles
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0\cf0 {\listtext	1.	}Call QueryMovie for each of the two submissions\
{\listtext	2.	}If there are multiple movies with that title, prompt user for release year or something like that\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Query OMDB (if necessary)
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls5\ilvl0\cf0 {\listtext	1.	}Convert strings to whatever they need to be to query OMDB\
{\listtext	2.	}Pass the new strings to QueryOmdbByTitle()\
{\listtext	3.	}If it\'92s not there, throw an exception\
{\listtext	4.	}If there are multiple movies with that title, prompt user for release year or something like that\
{\listtext	5.	}If all goes well, grab that JSON\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Convert any OmdbObjects to MovieObjects
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls6\ilvl0\cf0 {\listtext	1.	}Use ValidateOmdbObject() to make sure the OMDB object contains the right values, or else throw an exception\
{\listtext	2.	}Call CreateMovieObject() and then pass the returned value to CacheMovieToDatabase()\
{\listtext	3.	}Save the two movie objects to throw-away variables for processing in the next step\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Create a ClientObject and store shared characteristics of the two movies to it
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls7\ilvl0\cf0 {\listtext	1.	}First call ValidateMovieObject() to make sure the MovieObjects contain the right values, or else throw an exception\
{\listtext	2.	}Pass two movie objects to CreateClientObject()\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls7\ilvl1\cf0 {\listtext	1.	}Inside the CreateClientObject method, a ClientObject is created and any shared values are stored to the object\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls7\ilvl0\cf0 {\listtext	3.	}A client object is returned and ready to be sent back to the client\
{\listtext	4.	}Client object is lightweight, it just contains simple string values\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Send ClientObject to the client
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls8\ilvl0\cf0 {\listtext	1.	}However that works\
\pard\pardeftab720
\cf0 \
\pard\pardeftab720

\b \cf0 Client updates its display to show values
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls9\ilvl0\cf0 {\listtext	1.	}In iOS code, display is set according to the client object that is passed\
{\listtext	2.	}Any parsing that needs to occur\
\pard\pardeftab720\sa240
\cf0 \
\pard\pardeftab720\sa260

\f0\fs26 \cf0 \
\
\
\uc0\u8232 \ul IDEAS FOR FUTURE\ulnone \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls10\ilvl0
\b \cf0 {\listtext	\'95	}Actor/Actress comparison functionality
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls10\ilvl1\cf0 {\listtext	
\f2 \uc0\u9702 
\f0 	}user can see what appearances two actors/actresses have in common\
{\listtext	
\f2 \uc0\u9702 
\f0 	}our database will store actor objects as well as movie objects\
{\listtext	
\f2 \uc0\u9702 
\f0 	}actor objects contain list of movies which that actor/actress has appeared in\
\pard\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls11\ilvl0
\b \cf0 {\listtext	\'95	}Two movies can simply be viewed side-by-side, maybe with matching values highlighted
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls11\ilvl1\cf0 {\listtext	
\f2 \uc0\u9702 
\f0 	}side-by-side view of movies, cast, release year, etc.\
\pard\pardeftab720\sa260
\cf0 \
}